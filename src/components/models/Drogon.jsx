/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

import { useFrame } from "@react-three/fiber";

export default function Drogon(props) {
  const { nodes, materials } = useGLTF("/models/drogon.glb");

  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y = 20 + Math.sin(state.clock.elapsedTime) * 0.85;
    // modelRef.current.rotation.x = Math.sin(state.clock.elapsedTime) * 1;
    // modelRef.current.rotation.y = Math.sin(state.clock.elapsedTime) * 1;
    // modelRef.current.rotation.z = Math.sin(state.clock.elapsedTime) * 1;
  });

  return (
    <group
      {...props}
      ref={modelRef}
      dispose={null}
      position={[0, 20, -50]}
      scale={[0.3, 0.3, 0.1]}
      rotation={[0.4, 0.3, 0.2]}
    >
      <group scale={[2.5, 2.5, 2.5]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6"].geometry}
          material={materials["Spikes and Horns"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6_1"].geometry}
          material={materials.Body}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6_2"].geometry}
          material={materials.EyeInside}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6_3"].geometry}
          material={materials.EyeGlass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6_4"].geometry}
          material={materials["Wing Cloth"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["006-0-6_5"].geometry}
          material={materials["Chest Spikes"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/drogon.glb");
